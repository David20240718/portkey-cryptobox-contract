/**
  * CryptoBoxContract.proto
 **/
syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";

import "google/protobuf/empty.proto";

option csharp_namespace = "Portkey.Contracts.CryptoBox";

service CryptoBoxContract {

    option (aelf.csharp_state) = "Portkey.Contracts.CryptoBox.CryptoBoxContractState";

    rpc Initialize(InitializeInput) returns (google.protobuf.Empty){}

    rpc CreateCryptoBox (CreateCryptoBoxInput) returns (google.protobuf.Empty) {}

    rpc TransferCryptoBox (TransferCryptoBoxBatchInput) returns (google.protobuf.Empty) {}
    
    rpc GetCryptoBoxInfo (GetCryptoBoxInput) returns (CryptoBoxOutput) {}
    
    rpc GetCryptoBoxMaxCount (google.protobuf.Empty) returns (CryptoBoxMaxCountOutput) {}
    
    rpc SetCryptoBoxMaxCount (SetCryptoBoxMaxCountInput) returns (google.protobuf.Empty) {}
    
    rpc RefundCryptoBox (RefundCryptoBoxInput) returns (google.protobuf.Empty) {}
    
}


message CreateCryptoBoxInput{
    string crypto_box_id = 1;
    string crypto_box_symbol = 2;
    int64 total_amount = 3;
    int64 min_amount = 4;
    int64 expiration_time = 5;
    int64 total_count = 6;
    CryptoBoxType crypto_box_type = 7;
    string public_key = 8;
    string crypto_box_signature = 9;
    aelf.Address sender_address = 10;
}

message TransferCryptoBoxInput{
    int64 amount = 1;
    aelf.Address receiver_address = 2;
    string crypto_box_signature = 3;
}

message TransferCryptoBoxBatchInput{
    string crypto_box_id = 1;
    repeated TransferCryptoBoxInput transfer_crypto_box_inputs = 2;
}

enum CryptoBoxType {
    UNKNOWN = 0;
    FIXED = 1;
    RANDOM = 2;
    QUICK_TRANSFER = 3;
}

message CryptoBoxInfo {
    string crypto_box_id = 1;
    string crypto_box_symbol = 2;
    int64 total_amount = 3;
    int64 expiration_time = 4;
    int64 total_count = 5;
    CryptoBoxType crypto_box_type = 6;
    aelf.Address sender_address = 7;
    string public_key = 8;
}

message CryptoBoxCreated{
    option (aelf.is_event) = true;
    aelf.Address sender_address = 1;
    string crypto_box_id = 2;
    string crypto_box_symbol = 3;
    int64 total_amount = 4;
    int64 total_count = 5;
    CryptoBoxType crypto_box_type = 6;
    aelf.Address receiver_address = 7;

}

message AddressList{
    repeated aelf.Address addresses = 1;
}

message CryptoBoxReceived{
    option (aelf.is_event) = true;
    aelf.Address sender_address = 1;
    string crypto_box_id = 2;
    string crypto_box_symbol = 3;
    int64 amount = 4;
    aelf.Address receiver_address = 5;
    bool is_success = 6;
}

message InitializeInput{
    aelf.Address contract_admin = 1;
    int64 max_count = 2;
    
}

message CryptoBoxOutput {
   CryptoBoxInfo crypto_box_info = 1;
}

message GetCryptoBoxInput {
    string crypto_box_id = 1;
}

message CryptoBoxMaxCountOutput {
    int64 max_count = 1;
}

message SetCryptoBoxMaxCountInput {
    int64 max_count = 1;
}

message RefundCryptoBoxInput{
    string crypto_box_id = 1;
    int64 amount = 2;
    string crypto_box_signature = 3;
}

message CryptoBoxRefunded{
    option (aelf.is_event) = true;
    string crypto_box_id = 1;
    aelf.Address refund_address = 2;
    string crypto_box_symbol = 3;
    int64 amount = 4;
}





