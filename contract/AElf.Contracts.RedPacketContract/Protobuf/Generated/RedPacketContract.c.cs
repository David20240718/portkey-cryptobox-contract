// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: red_packet_contract.proto
// </auto-generated>
// Original file comments:
// This files is part of the Hello World smart contract example that is included in Boilerplate.
// It is only the definition of the contract, implementation is located in the "contract" folder
// and tests are located in the "test" folder.
//
// You can use this as a basic template for new contracts.
// 
// When building Boilerplate or the contract project located in the "../contract/AElf.Contracts.RedPacketContract/" 
// protoc (the protobuf compiler) will be invoked and this file will produce a .c.cs file and .g.cs file, in the 
// "../contract/AElf.Contracts.RedPacketContract/Protobuf/Generated/" folder. 
//
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.RedPacketContract {

  #region Events
  #endregion
  /// <summary>
  /// the contract definition: a gRPC service definition.
  /// </summary>
  public static partial class RedPacketContractContainer
  {
    static readonly string __ServiceName = "RedPacketContract";

    #region Marshallers
    #endregion

    #region Methods
    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.RedPacketContract.RedPacketContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Contracts.RedPacketContract.RedPacketContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of RedPacketContract</summary>
    public abstract partial class RedPacketContractBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.RedPacketContract.RedPacketContractState>
    {
    }

    public static aelf::ServerServiceDefinition BindService(RedPacketContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors).Build();
    }

  }
}
#endregion

