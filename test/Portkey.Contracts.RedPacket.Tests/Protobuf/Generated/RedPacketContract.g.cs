// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: red_packet_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Portkey.Contracts.RedPacket {

  /// <summary>Holder for reflection information generated from red_packet_contract.proto</summary>
  internal static partial class RedPacketContractReflection {

    #region Descriptor
    /// <summary>File descriptor for red_packet_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RedPacketContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyZWRfcGFja2V0X2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJvdG8a",
            "EmFlbGYvb3B0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvIooCChRDcmVhdGVSZWRQYWNrZXRJbnB1dBIVCg1yZWRfcGFja2V0X2lk",
            "GAEgASgJEhkKEXJlZF9wYWNrZXRfc3ltYm9sGAIgASgJEhQKDHRvdGFsX2Ft",
            "b3VudBgDIAEoAxISCgptaW5fYW1vdW50GAQgASgDEhcKD2V4cGlyYXRpb25f",
            "dGltZRgFIAEoAxITCgt0b3RhbF9jb3VudBgGIAEoAxIVCg1SZWRQYWNrZXRU",
            "eXBlGAcgASgJEhIKCnB1YmxpY19rZXkYCCABKAkSHAoUcmVkX3BhY2tldF9z",
            "aWduYXR1cmUYCSABKAkSHwoLZnJvbV9zZW5kZXIYCiABKAsyCi5hZWxmLkhh",
            "c2gihgEKFlRyYW5zZmVyUmVkUGFja2V0SW5wdXQSFQoNcmVkX3BhY2tldF9p",
            "ZBgBIAEoCRIOCgZhbW91bnQYAiABKAMSJwoQcmVjZWl2ZXJfYWRkcmVzcxgD",
            "IAEoCzINLmFlbGYuQWRkcmVzcxIcChRyZWRfcGFja2V0X3NpZ25hdHVyZRgE",
            "IAEoCSJxChtUcmFuc2ZlclJlZFBhY2tldEJhdGNoSW5wdXQSFQoNcmVkX3Bh",
            "Y2tldF9pZBgBIAEoCRI7Chp0cmFuc2Zlcl9yZWRfcGFja2V0X2lucHV0cxgC",
            "IAMoCzIXLlRyYW5zZmVyUmVkUGFja2V0SW5wdXQixAEKDVJlZFBhY2tldElu",
            "Zm8SFQoNcmVkX3BhY2tldF9pZBgBIAEoCRIZChFyZWRfcGFja2V0X3N5bWJv",
            "bBgCIAEoCRIUCgx0b3RhbF9hbW91bnQYAyABKAMSEgoKbWluX2Ftb3VudBgE",
            "IAEoAxIXCg9leHBpcmF0aW9uX3RpbWUYBSABKAMSEwoLdG90YWxfY291bnQY",
            "BiABKAMSFQoNUmVkUGFja2V0VHlwZRgHIAEoCRISCgpwdWJsaWNfa2V5GAgg",
            "ASgJIq0BChBSZWRQYWNrZXRDcmVhdGVkEh8KC2Zyb21fc2VuZGVyGAEgASgL",
            "MgouYWVsZi5IYXNoEhUKDXJlZF9wYWNrZXRfaWQYAiABKAkSGQoRcmVkX3Bh",
            "Y2tldF9zeW1ib2wYAyABKAkSFAoMdG90YWxfYW1vdW50GAQgASgDEhMKC3Rv",
            "dGFsX2NvdW50GAUgASgDEhUKDVJlZFBhY2tldFR5cGUYBiABKAk6BKC7GAEq",
            "RwoNUmVkUGFja2V0VHlwZRILCgdVTktOT1dOEAASCQoFRklYRUQQARIKCgZS",
            "QU5ET00QAhISCg5RVUlDS19UUkFOU0ZFUhADMt0BChFSZWRQYWNrZXRDb250",
            "cmFjdBJCCg9DcmVhdGVSZWRQYWNrZXQSFS5DcmVhdGVSZWRQYWNrZXRJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEksKEVRyYW5zZmVyUmVkUGFj",
            "a2V0EhwuVHJhbnNmZXJSZWRQYWNrZXRCYXRjaElucHV0GhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5IgAaN7LM9gEyUG9ydGtleS5Db250cmFjdHMuUmVkUGFj",
            "a2V0LlJlZFBhY2tldENvbnRyYWN0U3RhdGVCHqoCG1BvcnRrZXkuQ29udHJh",
            "Y3RzLlJlZFBhY2tldGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Portkey.Contracts.RedPacket.RedPacketType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.RedPacket.CreateRedPacketInput), global::Portkey.Contracts.RedPacket.CreateRedPacketInput.Parser, new[]{ "RedPacketId", "RedPacketSymbol", "TotalAmount", "MinAmount", "ExpirationTime", "TotalCount", "RedPacketType", "PublicKey", "RedPacketSignature", "FromSender" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.RedPacket.TransferRedPacketInput), global::Portkey.Contracts.RedPacket.TransferRedPacketInput.Parser, new[]{ "RedPacketId", "Amount", "ReceiverAddress", "RedPacketSignature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput), global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput.Parser, new[]{ "RedPacketId", "TransferRedPacketInputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.RedPacket.RedPacketInfo), global::Portkey.Contracts.RedPacket.RedPacketInfo.Parser, new[]{ "RedPacketId", "RedPacketSymbol", "TotalAmount", "MinAmount", "ExpirationTime", "TotalCount", "RedPacketType", "PublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.RedPacket.RedPacketCreated), global::Portkey.Contracts.RedPacket.RedPacketCreated.Parser, new[]{ "FromSender", "RedPacketId", "RedPacketSymbol", "TotalAmount", "TotalCount", "RedPacketType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum RedPacketType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("FIXED")] Fixed = 1,
    [pbr::OriginalName("RANDOM")] Random = 2,
    [pbr::OriginalName("QUICK_TRANSFER")] QuickTransfer = 3,
  }

  #endregion

  #region Messages
  internal sealed partial class CreateRedPacketInput : pb::IMessage<CreateRedPacketInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateRedPacketInput> _parser = new pb::MessageParser<CreateRedPacketInput>(() => new CreateRedPacketInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateRedPacketInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateRedPacketInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateRedPacketInput(CreateRedPacketInput other) : this() {
      redPacketId_ = other.redPacketId_;
      redPacketSymbol_ = other.redPacketSymbol_;
      totalAmount_ = other.totalAmount_;
      minAmount_ = other.minAmount_;
      expirationTime_ = other.expirationTime_;
      totalCount_ = other.totalCount_;
      redPacketType_ = other.redPacketType_;
      publicKey_ = other.publicKey_;
      redPacketSignature_ = other.redPacketSignature_;
      fromSender_ = other.fromSender_ != null ? other.fromSender_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateRedPacketInput Clone() {
      return new CreateRedPacketInput(this);
    }

    /// <summary>Field number for the "red_packet_id" field.</summary>
    public const int RedPacketIdFieldNumber = 1;
    private string redPacketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketId {
      get { return redPacketId_; }
      set {
        redPacketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "red_packet_symbol" field.</summary>
    public const int RedPacketSymbolFieldNumber = 2;
    private string redPacketSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketSymbol {
      get { return redPacketSymbol_; }
      set {
        redPacketSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_amount" field.</summary>
    public const int TotalAmountFieldNumber = 3;
    private long totalAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalAmount {
      get { return totalAmount_; }
      set {
        totalAmount_ = value;
      }
    }

    /// <summary>Field number for the "min_amount" field.</summary>
    public const int MinAmountFieldNumber = 4;
    private long minAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinAmount {
      get { return minAmount_; }
      set {
        minAmount_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 5;
    private long expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 6;
    private long totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "RedPacketType" field.</summary>
    public const int RedPacketTypeFieldNumber = 7;
    private string redPacketType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketType {
      get { return redPacketType_; }
      set {
        redPacketType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 8;
    private string publicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "red_packet_signature" field.</summary>
    public const int RedPacketSignatureFieldNumber = 9;
    private string redPacketSignature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketSignature {
      get { return redPacketSignature_; }
      set {
        redPacketSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_sender" field.</summary>
    public const int FromSenderFieldNumber = 10;
    private global::AElf.Types.Hash fromSender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash FromSender {
      get { return fromSender_; }
      set {
        fromSender_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateRedPacketInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateRedPacketInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPacketId != other.RedPacketId) return false;
      if (RedPacketSymbol != other.RedPacketSymbol) return false;
      if (TotalAmount != other.TotalAmount) return false;
      if (MinAmount != other.MinAmount) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (TotalCount != other.TotalCount) return false;
      if (RedPacketType != other.RedPacketType) return false;
      if (PublicKey != other.PublicKey) return false;
      if (RedPacketSignature != other.RedPacketSignature) return false;
      if (!object.Equals(FromSender, other.FromSender)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPacketId.Length != 0) hash ^= RedPacketId.GetHashCode();
      if (RedPacketSymbol.Length != 0) hash ^= RedPacketSymbol.GetHashCode();
      if (TotalAmount != 0L) hash ^= TotalAmount.GetHashCode();
      if (MinAmount != 0L) hash ^= MinAmount.GetHashCode();
      if (ExpirationTime != 0L) hash ^= ExpirationTime.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (RedPacketType.Length != 0) hash ^= RedPacketType.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (RedPacketSignature.Length != 0) hash ^= RedPacketSignature.GetHashCode();
      if (fromSender_ != null) hash ^= FromSender.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAmount);
      }
      if (MinAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinAmount);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpirationTime);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PublicKey);
      }
      if (RedPacketSignature.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RedPacketSignature);
      }
      if (fromSender_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(FromSender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAmount);
      }
      if (MinAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinAmount);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpirationTime);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PublicKey);
      }
      if (RedPacketSignature.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RedPacketSignature);
      }
      if (fromSender_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(FromSender);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RedPacketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAmount);
      }
      if (MinAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinAmount);
      }
      if (ExpirationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTime);
      }
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (RedPacketSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketSignature);
      }
      if (fromSender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromSender);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateRedPacketInput other) {
      if (other == null) {
        return;
      }
      if (other.RedPacketId.Length != 0) {
        RedPacketId = other.RedPacketId;
      }
      if (other.RedPacketSymbol.Length != 0) {
        RedPacketSymbol = other.RedPacketSymbol;
      }
      if (other.TotalAmount != 0L) {
        TotalAmount = other.TotalAmount;
      }
      if (other.MinAmount != 0L) {
        MinAmount = other.MinAmount;
      }
      if (other.ExpirationTime != 0L) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      if (other.RedPacketType.Length != 0) {
        RedPacketType = other.RedPacketType;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      if (other.RedPacketSignature.Length != 0) {
        RedPacketSignature = other.RedPacketSignature;
      }
      if (other.fromSender_ != null) {
        if (fromSender_ == null) {
          FromSender = new global::AElf.Types.Hash();
        }
        FromSender.MergeFrom(other.FromSender);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 24: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 32: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 40: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 58: {
            RedPacketType = input.ReadString();
            break;
          }
          case 66: {
            PublicKey = input.ReadString();
            break;
          }
          case 74: {
            RedPacketSignature = input.ReadString();
            break;
          }
          case 82: {
            if (fromSender_ == null) {
              FromSender = new global::AElf.Types.Hash();
            }
            input.ReadMessage(FromSender);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 24: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 32: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 40: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 58: {
            RedPacketType = input.ReadString();
            break;
          }
          case 66: {
            PublicKey = input.ReadString();
            break;
          }
          case 74: {
            RedPacketSignature = input.ReadString();
            break;
          }
          case 82: {
            if (fromSender_ == null) {
              FromSender = new global::AElf.Types.Hash();
            }
            input.ReadMessage(FromSender);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TransferRedPacketInput : pb::IMessage<TransferRedPacketInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferRedPacketInput> _parser = new pb::MessageParser<TransferRedPacketInput>(() => new TransferRedPacketInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferRedPacketInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketInput(TransferRedPacketInput other) : this() {
      redPacketId_ = other.redPacketId_;
      amount_ = other.amount_;
      receiverAddress_ = other.receiverAddress_ != null ? other.receiverAddress_.Clone() : null;
      redPacketSignature_ = other.redPacketSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketInput Clone() {
      return new TransferRedPacketInput(this);
    }

    /// <summary>Field number for the "red_packet_id" field.</summary>
    public const int RedPacketIdFieldNumber = 1;
    private string redPacketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketId {
      get { return redPacketId_; }
      set {
        redPacketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 3;
    private global::AElf.Types.Address receiverAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = value;
      }
    }

    /// <summary>Field number for the "red_packet_signature" field.</summary>
    public const int RedPacketSignatureFieldNumber = 4;
    private string redPacketSignature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketSignature {
      get { return redPacketSignature_; }
      set {
        redPacketSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferRedPacketInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferRedPacketInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPacketId != other.RedPacketId) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(ReceiverAddress, other.ReceiverAddress)) return false;
      if (RedPacketSignature != other.RedPacketSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPacketId.Length != 0) hash ^= RedPacketId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (receiverAddress_ != null) hash ^= ReceiverAddress.GetHashCode();
      if (RedPacketSignature.Length != 0) hash ^= RedPacketSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (receiverAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReceiverAddress);
      }
      if (RedPacketSignature.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RedPacketSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (receiverAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReceiverAddress);
      }
      if (RedPacketSignature.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RedPacketSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RedPacketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (receiverAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceiverAddress);
      }
      if (RedPacketSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferRedPacketInput other) {
      if (other == null) {
        return;
      }
      if (other.RedPacketId.Length != 0) {
        RedPacketId = other.RedPacketId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.receiverAddress_ != null) {
        if (receiverAddress_ == null) {
          ReceiverAddress = new global::AElf.Types.Address();
        }
        ReceiverAddress.MergeFrom(other.ReceiverAddress);
      }
      if (other.RedPacketSignature.Length != 0) {
        RedPacketSignature = other.RedPacketSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (receiverAddress_ == null) {
              ReceiverAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiverAddress);
            break;
          }
          case 34: {
            RedPacketSignature = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            if (receiverAddress_ == null) {
              ReceiverAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(ReceiverAddress);
            break;
          }
          case 34: {
            RedPacketSignature = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TransferRedPacketBatchInput : pb::IMessage<TransferRedPacketBatchInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransferRedPacketBatchInput> _parser = new pb::MessageParser<TransferRedPacketBatchInput>(() => new TransferRedPacketBatchInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TransferRedPacketBatchInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketBatchInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketBatchInput(TransferRedPacketBatchInput other) : this() {
      redPacketId_ = other.redPacketId_;
      transferRedPacketInputs_ = other.transferRedPacketInputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransferRedPacketBatchInput Clone() {
      return new TransferRedPacketBatchInput(this);
    }

    /// <summary>Field number for the "red_packet_id" field.</summary>
    public const int RedPacketIdFieldNumber = 1;
    private string redPacketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketId {
      get { return redPacketId_; }
      set {
        redPacketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_red_packet_inputs" field.</summary>
    public const int TransferRedPacketInputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Portkey.Contracts.RedPacket.TransferRedPacketInput> _repeated_transferRedPacketInputs_codec
        = pb::FieldCodec.ForMessage(18, global::Portkey.Contracts.RedPacket.TransferRedPacketInput.Parser);
    private readonly pbc::RepeatedField<global::Portkey.Contracts.RedPacket.TransferRedPacketInput> transferRedPacketInputs_ = new pbc::RepeatedField<global::Portkey.Contracts.RedPacket.TransferRedPacketInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Portkey.Contracts.RedPacket.TransferRedPacketInput> TransferRedPacketInputs {
      get { return transferRedPacketInputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TransferRedPacketBatchInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TransferRedPacketBatchInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPacketId != other.RedPacketId) return false;
      if(!transferRedPacketInputs_.Equals(other.transferRedPacketInputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPacketId.Length != 0) hash ^= RedPacketId.GetHashCode();
      hash ^= transferRedPacketInputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      transferRedPacketInputs_.WriteTo(output, _repeated_transferRedPacketInputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      transferRedPacketInputs_.WriteTo(ref output, _repeated_transferRedPacketInputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RedPacketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketId);
      }
      size += transferRedPacketInputs_.CalculateSize(_repeated_transferRedPacketInputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TransferRedPacketBatchInput other) {
      if (other == null) {
        return;
      }
      if (other.RedPacketId.Length != 0) {
        RedPacketId = other.RedPacketId;
      }
      transferRedPacketInputs_.Add(other.transferRedPacketInputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            transferRedPacketInputs_.AddEntriesFrom(input, _repeated_transferRedPacketInputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            transferRedPacketInputs_.AddEntriesFrom(ref input, _repeated_transferRedPacketInputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class RedPacketInfo : pb::IMessage<RedPacketInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedPacketInfo> _parser = new pb::MessageParser<RedPacketInfo>(() => new RedPacketInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RedPacketInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketInfo(RedPacketInfo other) : this() {
      redPacketId_ = other.redPacketId_;
      redPacketSymbol_ = other.redPacketSymbol_;
      totalAmount_ = other.totalAmount_;
      minAmount_ = other.minAmount_;
      expirationTime_ = other.expirationTime_;
      totalCount_ = other.totalCount_;
      redPacketType_ = other.redPacketType_;
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketInfo Clone() {
      return new RedPacketInfo(this);
    }

    /// <summary>Field number for the "red_packet_id" field.</summary>
    public const int RedPacketIdFieldNumber = 1;
    private string redPacketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketId {
      get { return redPacketId_; }
      set {
        redPacketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "red_packet_symbol" field.</summary>
    public const int RedPacketSymbolFieldNumber = 2;
    private string redPacketSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketSymbol {
      get { return redPacketSymbol_; }
      set {
        redPacketSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_amount" field.</summary>
    public const int TotalAmountFieldNumber = 3;
    private long totalAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalAmount {
      get { return totalAmount_; }
      set {
        totalAmount_ = value;
      }
    }

    /// <summary>Field number for the "min_amount" field.</summary>
    public const int MinAmountFieldNumber = 4;
    private long minAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinAmount {
      get { return minAmount_; }
      set {
        minAmount_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 5;
    private long expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 6;
    private long totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "RedPacketType" field.</summary>
    public const int RedPacketTypeFieldNumber = 7;
    private string redPacketType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketType {
      get { return redPacketType_; }
      set {
        redPacketType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 8;
    private string publicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RedPacketInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RedPacketInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedPacketId != other.RedPacketId) return false;
      if (RedPacketSymbol != other.RedPacketSymbol) return false;
      if (TotalAmount != other.TotalAmount) return false;
      if (MinAmount != other.MinAmount) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (TotalCount != other.TotalCount) return false;
      if (RedPacketType != other.RedPacketType) return false;
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RedPacketId.Length != 0) hash ^= RedPacketId.GetHashCode();
      if (RedPacketSymbol.Length != 0) hash ^= RedPacketSymbol.GetHashCode();
      if (TotalAmount != 0L) hash ^= TotalAmount.GetHashCode();
      if (MinAmount != 0L) hash ^= MinAmount.GetHashCode();
      if (ExpirationTime != 0L) hash ^= ExpirationTime.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (RedPacketType.Length != 0) hash ^= RedPacketType.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAmount);
      }
      if (MinAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinAmount);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpirationTime);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalAmount);
      }
      if (MinAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinAmount);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpirationTime);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RedPacketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAmount);
      }
      if (MinAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinAmount);
      }
      if (ExpirationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTime);
      }
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketType);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RedPacketInfo other) {
      if (other == null) {
        return;
      }
      if (other.RedPacketId.Length != 0) {
        RedPacketId = other.RedPacketId;
      }
      if (other.RedPacketSymbol.Length != 0) {
        RedPacketSymbol = other.RedPacketSymbol;
      }
      if (other.TotalAmount != 0L) {
        TotalAmount = other.TotalAmount;
      }
      if (other.MinAmount != 0L) {
        MinAmount = other.MinAmount;
      }
      if (other.ExpirationTime != 0L) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      if (other.RedPacketType.Length != 0) {
        RedPacketType = other.RedPacketType;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 24: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 32: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 40: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 58: {
            RedPacketType = input.ReadString();
            break;
          }
          case 66: {
            PublicKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RedPacketId = input.ReadString();
            break;
          }
          case 18: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 24: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 32: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 40: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 58: {
            RedPacketType = input.ReadString();
            break;
          }
          case 66: {
            PublicKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class RedPacketCreated : pb::IMessage<RedPacketCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RedPacketCreated> _parser = new pb::MessageParser<RedPacketCreated>(() => new RedPacketCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RedPacketCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketCreated(RedPacketCreated other) : this() {
      fromSender_ = other.fromSender_ != null ? other.fromSender_.Clone() : null;
      redPacketId_ = other.redPacketId_;
      redPacketSymbol_ = other.redPacketSymbol_;
      totalAmount_ = other.totalAmount_;
      totalCount_ = other.totalCount_;
      redPacketType_ = other.redPacketType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RedPacketCreated Clone() {
      return new RedPacketCreated(this);
    }

    /// <summary>Field number for the "from_sender" field.</summary>
    public const int FromSenderFieldNumber = 1;
    private global::AElf.Types.Hash fromSender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash FromSender {
      get { return fromSender_; }
      set {
        fromSender_ = value;
      }
    }

    /// <summary>Field number for the "red_packet_id" field.</summary>
    public const int RedPacketIdFieldNumber = 2;
    private string redPacketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketId {
      get { return redPacketId_; }
      set {
        redPacketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "red_packet_symbol" field.</summary>
    public const int RedPacketSymbolFieldNumber = 3;
    private string redPacketSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketSymbol {
      get { return redPacketSymbol_; }
      set {
        redPacketSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_amount" field.</summary>
    public const int TotalAmountFieldNumber = 4;
    private long totalAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalAmount {
      get { return totalAmount_; }
      set {
        totalAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 5;
    private long totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "RedPacketType" field.</summary>
    public const int RedPacketTypeFieldNumber = 6;
    private string redPacketType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedPacketType {
      get { return redPacketType_; }
      set {
        redPacketType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RedPacketCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RedPacketCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromSender, other.FromSender)) return false;
      if (RedPacketId != other.RedPacketId) return false;
      if (RedPacketSymbol != other.RedPacketSymbol) return false;
      if (TotalAmount != other.TotalAmount) return false;
      if (TotalCount != other.TotalCount) return false;
      if (RedPacketType != other.RedPacketType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fromSender_ != null) hash ^= FromSender.GetHashCode();
      if (RedPacketId.Length != 0) hash ^= RedPacketId.GetHashCode();
      if (RedPacketSymbol.Length != 0) hash ^= RedPacketSymbol.GetHashCode();
      if (TotalAmount != 0L) hash ^= TotalAmount.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (RedPacketType.Length != 0) hash ^= RedPacketType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fromSender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromSender);
      }
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalAmount);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RedPacketType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fromSender_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromSender);
      }
      if (RedPacketId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalAmount);
      }
      if (TotalCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RedPacketType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fromSender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromSender);
      }
      if (RedPacketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketId);
      }
      if (RedPacketSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketSymbol);
      }
      if (TotalAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAmount);
      }
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (RedPacketType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedPacketType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RedPacketCreated other) {
      if (other == null) {
        return;
      }
      if (other.fromSender_ != null) {
        if (fromSender_ == null) {
          FromSender = new global::AElf.Types.Hash();
        }
        FromSender.MergeFrom(other.FromSender);
      }
      if (other.RedPacketId.Length != 0) {
        RedPacketId = other.RedPacketId;
      }
      if (other.RedPacketSymbol.Length != 0) {
        RedPacketSymbol = other.RedPacketSymbol;
      }
      if (other.TotalAmount != 0L) {
        TotalAmount = other.TotalAmount;
      }
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      if (other.RedPacketType.Length != 0) {
        RedPacketType = other.RedPacketType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromSender_ == null) {
              FromSender = new global::AElf.Types.Hash();
            }
            input.ReadMessage(FromSender);
            break;
          }
          case 18: {
            RedPacketId = input.ReadString();
            break;
          }
          case 26: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 32: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 50: {
            RedPacketType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fromSender_ == null) {
              FromSender = new global::AElf.Types.Hash();
            }
            input.ReadMessage(FromSender);
            break;
          }
          case 18: {
            RedPacketId = input.ReadString();
            break;
          }
          case 26: {
            RedPacketSymbol = input.ReadString();
            break;
          }
          case 32: {
            TotalAmount = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 50: {
            RedPacketType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
